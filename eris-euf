#!/usr/bin/env python3

from flask import Flask, json, request, jsonify, redirect, url_for
from werkzeug.serving import make_server
import sys
from os import listdir
from os.path import join, dirname, abspath, isdir
from threading import Thread


def add_third_party_dir(f):
    base_path = dirname(abspath(f))
    tp_dir = join(base_path, "third_party")

    for e in listdir(tp_dir):
        if isdir(join(tp_dir, e)):
            sys.path.append(join(tp_dir, e))

add_third_party_dir(__file__)
import eris


# All the REST API stuff
app = Flask(__name__)

@app.route("/", methods=["GET"])
def index():
    return redirect(url_for("service_status"))

@app.route("/configurations", methods=["GET"])
def configurations():
    return "TBD"

@app.route("/servicestatus", methods=["GET"])
def service_status():
    return jsonify({"adaptOn" : False, "eclOn" : euf_on})

@app.route("/services/<stype>/<int:status>", methods=["POST"])
def services(stype, status):
    if stype == "adapton":
        pass
    elif stype == "eclon":
        euf_on = True if status == 1 else False
    else:
        return 404

    return 200

class FlaskThread(Thread):
    def __init__(self, app):
        super().__init__()

        # Create the flask server using werkzeug
        self._server = make_server("localhost", 5000, app)
        self._ctx = app.app_context()
        self._ctx.push()

    def run(self):
        self._server.serve_forever()

    def shutdown(self):
        self._server.shutdown()


# Main
def main():
    # Start the flask thread
    flask_thread = FlaskThread(app)
    flask_thread.start()

    print("Please press a key!")
    f = input()

    # Shutdown everything
    flask_thread.shutdown()
    flask_thread.join()

if __name__ == "__main__":
    main()
